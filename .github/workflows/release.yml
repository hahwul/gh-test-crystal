---
name: Build Release Binaries
on:
  workflow_dispatch:
  release:
    types: [published]
jobs:
  build:
    name: Build Binaries
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-12, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: shards install
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5
      - if: startsWith(matrix.os, 'macos')
        name: Set architecture environment variable
        run: |
          if [ "$RUNNER_ARCH" == "X64" ]; then
            echo "ARCH=x86_64" >> $GITHUB_ENV
          elif [ "$RUNNER_ARCH" == "ARM64" ]; then
            echo "ARCH=arm64" >> $GITHUB_ENV
          else
            echo "ARCH=unknown" >> $GITHUB_ENV
          fi
      - if: matrix.os == 'ubuntu-latest'
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - if: matrix.os == 'ubuntu-latest'
        name: Build binary (Linux)
        run: |
          mkdir -p build
          for arch in amd64 arm64; do
            docker run --rm --platform linux/$arch -v $(pwd):/main -w /main --entrypoint="" 84codes/crystal:latest-debian-12 sh -c "
              apt-get update && apt-get install -y libyaml-dev ca-certificates git curl &&
              shards install --production &&
              /usr/bin/crystal build src/main.cr -o build/main-${GITHUB_REF_SLUG}-linux-$arch --release --no-debug --static
            "
          done
      - if: startsWith(matrix.os, 'macos')
        name: Build binary (macOS)
        run: |
          mkdir -p build
          crystal build src/main.cr \
            -o build/main-${GITHUB_REF_SLUG}-osx-${ARCH} \
            --no-debug --release
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ env.ARCH }}
          path: build
      - if: startsWith(github.ref, 'refs/tags/')
        name: Upload to GitHub Releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          file: build/*